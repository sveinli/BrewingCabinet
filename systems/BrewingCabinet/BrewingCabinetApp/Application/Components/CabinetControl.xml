<Component Model='BrewingLib.Cabinet' Name='CabinetControl' src='Components/CabinetControl.xml'  Description='Cabinet with heating, cooling and temperature sensor(s).'>
  <fs>1</fs>
  <SchedulingOrder>BottomUp</SchedulingOrder>

  <Signals>
    <Signal Description="Process run time each s." Input="0" Model="CDPSignal&lt;double&gt;" Name="Process Timer" Type="double" Unit="s/s"></Signal>
    <Signal Description="Process interval [s]." Input="0" Model="CDPSignal&lt;double&gt;" Name="Process Period" Type="double" Unit="s"></Signal>
    <Signal Description="Setpoint for heater" Input="0" Model="CDPSignal&lt;double&gt;" Name="Heating" Type="double" Unit="W">
      <Operator Description="Proportional-Integral-Derivative regulator" Model="Automation_deprecated.PIDRegulator&lt;double&gt;" Name="PIDRegulator" Type="double"  Value='0'>
        <Argument Description="Current state (position) of system (feedback)" Model="Argument&lt;double&gt;" Name="Y" Type="double" Value="0"  Routing='...TankTemp'></Argument>
        <Argument Description="PID regulator tuning parameter (P). Indicates how much to involve previous difference from SetPoint (proportional) term in every new calculation. Use 0 to eliminate proportional component from calculation." Model="Argument&lt;double&gt;" Name="Kp" Type="double" Value="250"></Argument>
        <Argument Description="PID regulator tuning parameter (I). Indicates how much to involve the time-difference-persisted (integral) term in every new calculation. Use 0 to eliminate integral component from calculation." Model="Argument&lt;double&gt;" Name="Ki" Type="double" Value="0.69999999999999995559"></Argument>
        <Argument Description="PID regulator tuning parameter (D). Indicates how much to involve the rate-of-difference (derivtive) term in every new calculation. Use 0 to eliminate derivative component from calculation." Model="Argument&lt;double&gt;" Name="Kd" Type="double" Value="60000"></Argument>
        <Argument Description="PID regulator tuning parameter. Overall gain. Can be used to scale (amplify or reduce) PIDRegulator effect. Use values &lt; 1 to reduce PIDRegulator effect. Use values &gt; 1 to increase PIDRegulator effect. Use value 0 to disable PIDRegulator (so only feed forward will be outputted). Use value 1 for no overall gain." Model="Argument&lt;double&gt;" Name="Kr" Type="double" Value="1"></Argument>
        <Argument Description="PID regulator tuning parameter. Feed forward (open loop) gain. Use values &gt; 0 to get more responsive control system. Use 0 to disable feed forward." Model="Argument&lt;double&gt;" Name="Kf" Type="double" Value="2"></Argument>
        <Argument Description="Saturation-based anti-windup limiter for integral term. Route actuator saturation level with values from 0 (normal operation) to 1 (full saturation) into this parameter for anti-windup on integral term." Model="Argument&lt;double&gt;" Name="Sat" Type="double" Value="0"></Argument>
        <Argument Description="Minimum allowed integral value. Values less than zero can be used to negative limit integral term. Use 0 to disable limiting." Model="Argument&lt;double&gt;" Name="MinI" Type="double" Value="-30"></Argument>
        <Argument Description="Maximum allowed integral value. Values greater than zero can be used to positive limit integral term. Use 0 to disable limiting." Model="Argument&lt;double&gt;" Name="MaxI" Type="double" Value="60"></Argument>
        <Argument Description="Integral decay. Values greater than zero can be used to reduce integral term oscillation effect. Use 0 to disable decay." Model="Argument&lt;double&gt;" Name="TDecay" Type="double" Value="3600"></Argument></Operator>
      <Operator Description="Limit (truncate) signal output values" Model="Automation_deprecated.MinMaxLimiter&lt;double&gt;" Name="MinMaxLimiter" Type="double"  Value='0'>
        <Argument Description="Minimum value to limit output to. Values below that will be replaced with Min value in output." Model="Argument&lt;double&gt;" Name="Min" Type="double" Value="0"></Argument>
        <Argument Description="Maximum value to limit output to. Values above that will be replaced with Max value in output." Model="Argument&lt;double&gt;" Name="Max" Type="double" Value="300"></Argument></Operator></Signal>
    <Signal Description="Air temperature inside cabinet." Input="1" Model="CDPSignal&lt;double&gt;" Name="CabinetAirTemp" Routing="..OneWireIOServer.Sensor3Temp" Type="double" Unit="DegC"></Signal>
    <Signal Description="Fermentation tank temperature" Input="1" Model="CDPSignal&lt;double&gt;" Name="TankTemp" Type="double" Unit="DegC"  Routing='..OneWireIOServer.Tank1Temp'></Signal>
    <Signal Description="Temperature outside of cabinet" Input="1" Model="CDPSignal&lt;double&gt;" Name="OutsideTemp" Type="double" Unit="DegC"  Routing='..OneWireIOServer.CabinetToptemp'></Signal>
  </Signals>

  <Alarms>
    <Alarm Description="A component was suspended!" Enabled="1" Model="CDPAlarm" Name="Component Suspended" Text="Component was suspended!"></Alarm>
  </Alarms>

  <Timers>
  </Timers>

  <Parameters>
    <Parameter Description="Requested temperature on worth." Name="TempSetPoint" Unit="DegC" Value="18.399999999999998579"  PreviousValue='18.300000000000000711'  TimeLastChanged='Fri Sep 13 01:26:13 2019'></Parameter>
  </Parameters>

  <Subcomponents>
    <Subcomponent Model="BrewingLib.SSRControlledHeater" Name="Heater" src="Components/CabinetControl/Heater.xml"></Subcomponent>
  </Subcomponents>
</Component>